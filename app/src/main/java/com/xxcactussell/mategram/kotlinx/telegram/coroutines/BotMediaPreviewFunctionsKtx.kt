//
// NOTE: THIS FILE IS AUTO-GENERATED by the "TdApiKtxGenerator".kt
// See: https://github.com/tdlibx/td-ktx-generator/
//
package com.xxcactussell.mategram.kotlinx.telegram.coroutines

import kotlin.Int
import kotlin.IntArray
import kotlin.Long
import kotlin.String
import com.xxcactussell.mategram.kotlinx.telegram.core.TelegramFlow
import org.drinkless.tdlib.TdApi
import org.drinkless.tdlib.TdApi.BotMediaPreview
import org.drinkless.tdlib.TdApi.BotMediaPreviewInfo
import org.drinkless.tdlib.TdApi.BotMediaPreviews
import org.drinkless.tdlib.TdApi.InputStoryContent

/**
 * Suspend function, which adds a new media preview to the beginning of the list of media previews
 * of a bot. Returns the added preview after addition is completed server-side. The total number of
 * previews must not exceed getOption(&quot;bot_media_preview_count_max&quot;) for the given language.
 *
 * @param botUserId Identifier of the target bot. The bot must be owned and must have the main Web
 * App.  
 * @param languageCode A two-letter ISO 639-1 language code for which preview is added. If empty,
 * then the preview will be shown to all users for whose languages there are no dedicated previews. If
 * non-empty, then there must be an official language pack of the same name, which is returned by
 * getLocalizationTargetInfo.  
 * @param content Content of the added preview.
 *
 * @return [BotMediaPreview] Describes media previews of a bot.
 */
suspend fun TelegramFlow.addBotMediaPreview(
  botUserId: Long,
  languageCode: String?,
  content: InputStoryContent?
): BotMediaPreview = this.sendFunctionAsync(TdApi.AddBotMediaPreview(botUserId, languageCode,
    content))

/**
 * Suspend function, which delete media previews from the list of media previews of a bot.
 *
 * @param botUserId Identifier of the target bot. The bot must be owned and must have the main Web
 * App.  
 * @param languageCode Language code of the media previews to delete.  
 * @param fileIds File identifiers of the media to delete.
 */
suspend fun TelegramFlow.deleteBotMediaPreviews(
  botUserId: Long,
  languageCode: String?,
  fileIds: IntArray?
) = this.sendFunctionLaunch(TdApi.DeleteBotMediaPreviews(botUserId, languageCode, fileIds))

/**
 * Suspend function, which replaces media preview in the list of media previews of a bot. Returns
 * the new preview after edit is completed server-side.
 *
 * @param botUserId Identifier of the target bot. The bot must be owned and must have the main Web
 * App.  
 * @param languageCode Language code of the media preview to edit.  
 * @param fileId File identifier of the media to replace.  
 * @param content Content of the new preview.
 *
 * @return [BotMediaPreview] Describes media previews of a bot.
 */
suspend fun TelegramFlow.editBotMediaPreview(
  botUserId: Long,
  languageCode: String?,
  fileId: Int,
  content: InputStoryContent?
): BotMediaPreview = this.sendFunctionAsync(TdApi.EditBotMediaPreview(botUserId, languageCode,
    fileId, content))

/**
 * Suspend function, which returns the list of media previews for the given language and the list of
 * languages for which the bot has dedicated previews.
 *
 * @param botUserId Identifier of the target bot. The bot must be owned and must have the main Web
 * App.  
 * @param languageCode A two-letter ISO 639-1 language code for which to get previews. If empty,
 * then default previews are returned.
 *
 * @return [BotMediaPreviewInfo] Contains a list of media previews of a bot for the given language
 * and the list of languages for which the bot has dedicated previews.
 */
suspend fun TelegramFlow.getBotMediaPreviewInfo(botUserId: Long, languageCode: String?):
    BotMediaPreviewInfo = this.sendFunctionAsync(TdApi.GetBotMediaPreviewInfo(botUserId,
    languageCode))

/**
 * Suspend function, which returns the list of media previews of a bot.
 *
 * @param botUserId Identifier of the target bot. The bot must have the main Web App.
 *
 * @return [BotMediaPreviews] Contains a list of media previews of a bot.
 */
suspend fun TelegramFlow.getBotMediaPreviews(botUserId: Long): BotMediaPreviews =
    this.sendFunctionAsync(TdApi.GetBotMediaPreviews(botUserId))

/**
 * Suspend function, which changes order of media previews in the list of media previews of a bot.
 *
 * @param botUserId Identifier of the target bot. The bot must be owned and must have the main Web
 * App.  
 * @param languageCode Language code of the media previews to reorder.  
 * @param fileIds File identifiers of the media in the new order.
 */
suspend fun TelegramFlow.reorderBotMediaPreviews(
  botUserId: Long,
  languageCode: String?,
  fileIds: IntArray?
) = this.sendFunctionLaunch(TdApi.ReorderBotMediaPreviews(botUserId, languageCode, fileIds))
